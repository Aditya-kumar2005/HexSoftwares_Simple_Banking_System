/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.example.simplebankingsystem;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.*;
import java.util.Date;
import javax.swing.*;

/**
 *
 * @author nanua
 */
public class Deposit extends javax.swing.JFrame implements ActionListener{

    /**
     * Creates new form Deposit
     */
    public Deposit() {
        initComponents();
    }
    Connection con;
    Statement s;
    JButton next,exit;
    JTextField text1;
    String number;
    Date d1=new Date();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JLabel img1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(10, 0));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        img1.setIcon(new javax.swing.ImageIcon("C:\\Users\\nanua\\OneDrive\\Desktop\\PROJECT\\Simplebankingsystem\\src\\main\\java\\com\\example\\simplebankingsystem\\atmimage5.png")); // NOI18N
        getContentPane().add(img1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1350, 810));
        JLabel text =new JLabel("Enter Amount you want to Deposit:");
        text.setFont(new Font("System",Font.BOLD,24));
        text.setForeground(Color.WHITE);
        text.setBounds(235,310,450,30);
        img1.add(text);
        text1=new JTextField();
        text1.setFont(new Font("System",Font.BOLD,24));
        text1.setBackground(Color.WHITE);
        text1.setForeground(Color.BLACK);
        text1.setBounds(235,345,150,30);
        img1.add(text1);

        next =new JButton("Next");
        next.setBounds(195,515,125,35);
        next.addActionListener(this);
        img1.add(next);
        exit =new JButton("Exit");
        exit.setBounds(565,515,125,35);
        exit.addActionListener(this);
        img1.add(exit);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    String d12=""+d1;
    int current_money=0,deposit_money;
    void _deposit() {
        number = text1.getText();
        int value;
        try {
            value = Integer.parseInt(number.trim());
            if (value <= 0) {
                JOptionPane.showMessageDialog(this, "Please enter a positive amount");
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid number");
            return;
        }

        try {
            int current_money = 0;
            connec co = new connec();
            Connection con = co.c;
            // Get the latest current balance
            String query1 = "SELECT current FROM balance";
            PreparedStatement pst1 = con.prepareStatement(query1);
            ResultSet rs1 = pst1.executeQuery();
            if (rs1.next()) {
                current_money = rs1.getInt("current");
            }
            current_money += value;

            String query = "INSERT INTO balance (current, type, deposit, withdraw, date) VALUES (?, ?, ?, ?, ?)";
            PreparedStatement pst2 = con.prepareStatement(query);
            pst2.setInt(1, current_money);
            pst2.setString(2, "Deposit");
            pst2.setInt(3, value);
            pst2.setInt(4, 0); // withdraw is 0 for deposit
            pst2.setString(5, d12);

            int i = pst2.executeUpdate();
            if (i > 0) {
                JOptionPane.showMessageDialog(this, "Your money Rs." + value + "\n is deposited successfully");
            } else {
                JOptionPane.showMessageDialog(this, "Error occurred during deposit");
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }         
        
    public void actionPerformed(ActionEvent ae){
            if(ae.getSource()==exit){
                Transaction t1=new Transaction();
                t1.setVisible(true);
                this.dispose();
            }else if(ae.getSource()==next){
                if (text1.getText() == null || text1.getText().trim().equals("")) {
                    JOptionPane.showMessageDialog(this, "Please enter money you want to deposit");
                    return;
                } else {
                    _deposit();
                }
            }
        }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Deposit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Deposit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Deposit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Deposit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Deposit().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
