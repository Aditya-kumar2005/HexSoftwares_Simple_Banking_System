/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.example.simplebankingsystem;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Date;
import javax.swing.*;
/**
 *
 * @author nanua
 */
public class FastCash extends javax.swing.JFrame implements ActionListener {

    /**
     * Creates new form FastCash
     */
    public FastCash() {
        initComponents();
    }
    JButton fiveh,twok,onek,fivek,oneh,twoh,exit7;
    String number;
    Date d1=new Date();
    int current_money=0,withdraw_money,deposit_money;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JLabel img7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(10, 0));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        img7.setIcon(new javax.swing.ImageIcon("C:\\Users\\nanua\\OneDrive\\Desktop\\PROJECT\\Simplebankingsystem\\src\\main\\java\\com\\example\\simplebankingsystem\\atmimage5.png")); // NOI18N
        getContentPane().add(img7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1350, 810));
        JLabel text =new JLabel("Select withdrawl amount:");
        text.setFont(new Font("System",Font.BOLD,24));
        text.setForeground(Color.WHITE);
        text.setBounds(255,310,400,30);
        img7.add(text);
        oneh =new JButton("100");
        oneh.setBounds(195,370,125,35);
        oneh.addActionListener(this);
        img7.add(oneh);
        fiveh =new JButton("500");
        fiveh.setBounds(195,420,125,35);
        fiveh.addActionListener(this);
        img7.add(fiveh);
        twok =new JButton("2000");
        twok.setBounds(195,470,125,35);
        twok.addActionListener(this);
        img7.add(twok);
        twoh =new JButton("200");
        twoh.setBounds(565,370,125,35);
        twoh.addActionListener(this);
        img7.add(twoh);
        onek =new JButton("1000");
        onek.setBounds(565,420,125,35);
        onek.addActionListener(this);
        img7.add(onek);
        fivek =new JButton("5000");
        fivek.setBounds(565,470,125,35);
        fivek.addActionListener(this);
        img7.add(fivek);
        exit7 =new JButton("Exit");
        exit7.setBounds(565,520,125,35);
        exit7.addActionListener(this);
        img7.add(exit7);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    void withdrawmoney(int value){
        String d12=""+d1;
             try{
                 int x=0;
              connec co =new connec();
              String query1="select * from balance";
              PreparedStatement pst1 = co.c.prepareStatement(query1);
              ResultSet rs1 = pst1.executeQuery();
            while(rs1.next()) {
                current_money=rs1.getInt("current");
                deposit_money=rs1.getInt("deposit");
            }
              if(current_money<value||current_money<=0){
                 JOptionPane.showMessageDialog(this,"You have not sufficient amount!!");
             }else if(current_money>=value){
                    current_money-=value; 
                     }
              String query="insert into balance values ('"+current_money+"','withdraw','"+x+"','"+value+"','"+d12+"')";
              int i=co.s.executeUpdate(query);
              if(i>0){
                  JOptionPane.showMessageDialog(this,"Your money Rs."+value+"\n is withdraw successfully");
              }else{JOptionPane.showMessageDialog(this,"error occured");
             }
             }
             catch(Exception e){
                 System.out.print(e);
             }
    }
    public void actionPerformed(ActionEvent ae){
            if(ae.getSource()==exit7){
                Transaction t1=new Transaction();
                t1.setVisible(true);
                this.dispose();
            }
            else if(ae.getSource()==oneh){
                int value=100;
                withdrawmoney(value);
            }
            else if(ae.getSource()==twoh){
                int value=200;
                withdrawmoney(value);
            }
            else if(ae.getSource()==fiveh){
                int value=500;
                withdrawmoney(value);
            }else if(ae.getSource()==onek){
                int value=1000;
                withdrawmoney(value);
            }else if(ae.getSource()==twok){
                int value=2000;
                withdrawmoney(value);
            }else if(ae.getSource()==fivek){
                int value=5000;
                withdrawmoney(value);
            }
            }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FastCash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FastCash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FastCash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FastCash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FastCash().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
